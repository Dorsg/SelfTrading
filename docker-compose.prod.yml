version: "3.8"

services:
  # — TLS Reverse-proxy
  caddy:
    image: caddy:latest
    container_name: caddy
    ports:
      - "80:80"     
      - "443:443"  
    volumes:
      - caddy_data:/data       
      - caddy_config:/config  
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
    networks:
      - selftrading-network

  # — Postgres (same as dev) —
  db:
    image: postgres:15
    container_name: trading-db
    restart: always
    env_file:
      - .env.production
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB:   ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - selftrading-network

  db-init:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    command: sh -c "sleep 15 && python database/init_db.py"
    depends_on:
      - db
    env_file:
      - .env.production
    networks:
      - selftrading-network

  # — FastAPI backend —
  api_gateway:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: api_gateway
    restart: unless-stopped
    env_file:
      - .env.production
    networks:
      - selftrading-network

  # — Your Vue UI, built with Nginx —
  client-ui:
    build:
      context: .
      dockerfile: Dockerfile.client-ui-naive
    container_name: client-ui
    restart: unless-stopped
    networks:
      - selftrading-network

  # — Scheduler (unchanged) —
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    container_name: scheduler
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env.production
    depends_on:
      - db
      - db-init
    networks:
      - selftrading-network

networks:
  selftrading-network:
    driver: bridge

volumes:
  pg_data:
  caddy_data:
  caddy_config:
  ib_settings:
