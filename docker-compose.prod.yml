volumes:
  pg_data:
  caddy_data:
  caddy_config:
  ib_settings:

services:
  caddy:
    image: caddy:latest
    container_name: caddy
    ports:
      - "80:80"     
      - "443:443"  
    volumes:
      - caddy_data:/data       
      - caddy_config:/config  
      - ./Caddyfile:/etc/caddy/Caddyfile:ro

  db:
    image: postgres:15
    container_name: trading-db
    restart: always
    env_file:
      - .env.production
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB:   ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data

  db-init:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    command: sh -c "sleep 15 && python database/init_db.py"
    depends_on:
      - db
    env_file:
      - .env.production
  
  api_gateway:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: api_gateway
    restart: unless-stopped
    env_file:
      - .env.production


  client-ui:
    build:
      context: .
      dockerfile: Dockerfile.client-ui-naive
    container_name: client-ui
    restart: unless-stopped



  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    container_name: scheduler
    extra_hosts:                           # <â€” add this
      - "host.docker.internal:host-gateway"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env.production
    depends_on:
      - db
      - db-init
    environment:
      - RUNNING_ENV=production

  ib-gateway-1:
    image: ghcr.io/unusualalpha/ib-gateway:latest
    restart: always
    network_mode: host
    env_file:
      - .env.production
    port: 
    environment:
      TWS_USERID: ${TWS_USERID}
      TWS_PASSWORD: ${TWS_PASSWORD}
      TRADING_MODE: paper
      READ_ONLY_API: "no"
      TIME_ZONE: Asia/Jerusalem
      TWS_ACCEPT_INCOMING: accept
      BYPASS_WARNING: "yes"
      BypassOrderPrecautions: "yes"
      BypassPriceBasedVolatilityRiskWarning: "yes"
      BypassNoOverfillProtectionPrecaution: "yes"
      BypassRedirectOrderWarning: "yes"
      AllowBlindTrading: "yes"
      ENABLE_VNC: "yes"
      ENABLE_VNC_SERVER: "true"
      VNC_SERVER_PASSWORD: ${VNC_SERVER_PASSWORD}
      OVERRIDE_API_PORT: "4004"
    ports:
      - "127.0.0.1:4002:4002"
      - "127.0.0.1:5900:5900"
    depends_on:
      - db
      - db-init


networks:
  default:
    name: selftrading_default
