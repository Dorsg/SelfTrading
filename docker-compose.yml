version: "3.9"

volumes:
  pg_data:
  ib_settings:

services:
  # ────────── Postgres ──────────
  db:
    image: postgres:15
    container_name: trading-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: new_self_trading_db
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env

  db-init:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    command: sh -c "echo 'Waiting 15s for DB…' && sleep 15 && python database/init_db.py"
    depends_on:
      db:
        condition: service_started
    env_file:
      - .env

  # ────────── FastAPI ──────────
  api_gateway:
    build:
      context: .
      dockerfile: Dockerfile.api
    volumes:
      - .:/app
    command: uvicorn api_gateway.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_started
      db-init:
        condition: service_completed_successfully
    env_file:
      - .env

  # ────────── Vue UI ──────────
  client-ui:
    build:
      context: .
      dockerfile: Dockerfile.client-ui-naive
    ports:
      - "8080:80"
    depends_on:
      api_gateway:
        condition: service_started

  # ────────── Scheduler ──────────
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    volumes:
      - .:/app
    command: python runner_scheduler/main.py
    depends_on:
      db:
        condition: service_started
      db-init:
        condition: service_completed_successfully
    restart: always
    env_file:
      - .env

  # ────────── Gateway Manager ──────────
  gateway-manager:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    volumes:
      - .:/app
      - ib_settings:/home/ibgateway/tws_settings
      - /var/run/docker.sock:/var/run/docker.sock
    command: python gateway_manager.py
    depends_on:
      db:
        condition: service_started
      db-init:
        condition: service_completed_successfully
    restart: always
    env_file:
      - .env
